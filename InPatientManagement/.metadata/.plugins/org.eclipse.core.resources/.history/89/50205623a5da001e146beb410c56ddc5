package com.admin.service.implementation;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.admin.bean.BedBean;
import com.admin.bean.DepartmentBean;
import com.admin.bean.RoomBean;
import com.admin.bean.RoomTypeBean;
import com.admin.bean.WardBean;
import com.admin.entity.BedAllocation;
import com.admin.entity.BedEntity;
import com.admin.entity.Department;
import com.admin.entity.RoomEntity;
import com.admin.entity.RoomType;
import com.admin.entity.Ward;
import com.admin.exception.BedAlreadyExistsException;
import com.admin.exception.RecordNotFoundException;
import com.admin.exception.RoomCapacityExceededException;
import com.admin.repository.BedEntityRepository;
import com.admin.service.BedService;
import com.fasterxml.jackson.databind.ObjectMapper;

@Service
public class BedServiceImpl implements BedService {

	@Autowired
	BedEntityRepository bedEntityRepository;

	ObjectMapper objectMapper=new ObjectMapper();
	@Override
	public BedBean save(BedBean bedBean) {
		// TODO Auto-generated method stub
		BedEntity bedEntity1 = bedEntityRepository.getByBedNoAndRoomId_Id(bedBean.getBedNo(),
				bedBean.getRoomId().getId());
		if (bedEntity1 == null) {
			RoomBean room = bedBean.getRoomId();
			Integer totalBeds = bedEntityRepository.sumBedsByRoom(room.getId());
			if (totalBeds == null) {
				totalBeds = 0;
			}
			if (totalBeds + 1 <= room.getRoomSharing()) {
				BedEntity bedEntity = new BedEntity();
				bedBean.setStatus("Empty");
				beanToEntity(bedBean, bedEntity);
				bedEntityRepository.save(bedEntity);
			} else {
				throw new RoomCapacityExceededException("Room bed capacity exceeded");
			}
		}else {
			throw new BedAlreadyExistsException("Already bed exists with this bedNo");
		}
		return bedBean;
	}

	private void beanToEntity(BedBean bedBean, BedEntity bedEntity) {
	  
		bedEntity = objectMapper.convertValue(bedBean, BedEntity.class);
	}

	
	@Override
	public BedBean getById(long bedId) {
		// TODO Auto-generated method stub

		BedEntity bedEntity = bedEntityRepository.findById(bedId)
				.orElseThrow(() -> new RecordNotFoundException("No Record Found with given id"));
		BedBean bedBean = new BedBean();
		entityToBean(bedEntity, bedBean);
		return bedBean;

	}

	private void entityToBean(BedEntity bedEntity, BedBean bedBean) {
		// TODO Auto-generated method stub
		bedBean = objectMapper.convertValue(bedEntity, BedBean.class);
	}

	
	@Override
	public List<BedBean> getAll() {
		// TODO Auto-generated method stub
		List<BedEntity> entityList = bedEntityRepository.findAll();
		List<BedBean> beanList = new ArrayList<>();
		entityToBean(entityList, beanList);
		return beanList;
	}

	private void entityToBean(List<BedEntity> entityList, List<BedBean> beanList) {
		// TODO Auto-generated method stub
		for (BedEntity bedEntity : entityList) {
			BedBean bedBean = new BedBean();
			entityToBean(bedEntity, bedBean);
			beanList.add(bedBean);
		}
	}

	@Override
	public void delete(long id) {
		// TODO Auto-generated method stub
		bedEntityRepository.deleteById(id);
	}

	@Override
	public void update(long bedId, BedBean updatedBed) {
		// TODO Auto-generated method stub
		BedEntity bedEntity = bedEntityRepository.findById(bedId)
				.orElseThrow(() -> new RecordNotFoundException("No Record Found with given id"));
		if (bedEntity != null) {
			bedEntity.setBedNo(updatedBed.getBedNo());
			RoomBean room = updatedBed.getRoomId();
			RoomEntity roomEntity = new RoomEntity();
			beanToEntity(roomEntity, room);
			bedEntity.setRoomId(roomEntity);
			bedEntity.setStatus(updatedBed.getStatus());

		bedEntityRepository.save(bedEntity);

	}

	@Override
	public List<BedBean> findByBedIdRoomEntityId(Long roomEntityId) {
		// TODO Auto-generated method stub
		List<BedEntity> entityList = bedEntityRepository.findByRoomId_Id(roomEntityId);
		List<BedBean> beanList = new ArrayList<>();
		entityToBean(entityList, beanList);
		return beanList;
	}

}
