package com.admin.controller;

import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;

import com.admin.bean.RoomTypeBean;
import com.admin.entity.RoomType;
import com.admin.service.RoomTypeService;

@Controller
@RequestMapping("/roomType")
@CrossOrigin(origins="http://localhost:4200")
public class RoomTypeController {
	private static final Logger logger = LoggerFactory.getLogger(RoomController.class);
	@Autowired
	RoomTypeService roomTypeService;
	@PostMapping(path = "/save")
	public ResponseEntity<RoomTypeBean> save(@RequestBody RoomTypeBean roomTypeBean){
		logger.info("Saving the roomtype details ");
		roomTypeService.save(roomTypeBean);
		ResponseEntity<RoomTypeBean> entity=new ResponseEntity<>(roomTypeBean,HttpStatus.CREATED);
		logger.info("RoomType details saved successfully");
		return entity;
		
		
	}
	@GetMapping(path ="/getAll")
	public ResponseEntity<List<RoomTypeBean>> getAll(){
		List<RoomTypeBean> list=roomTypeService.getAll();
		return new ResponseEntity<List<RoomTypeBean>>(list,HttpStatus.OK);
	}
	
	@GetMapping(path = "/getById/{id}")
	public ResponseEntity<RoomTypeBean> getById(@PathVariable Long id){
		RoomTypeBean roombyid = roomTypeService.getById(id);
		return new ResponseEntity<RoomTypeBean>(roombyid,HttpStatus.OK);	
	}
//	@DeleteMapping(path = "/delete/{id}")
//	public ResponseEntity delete(@PathVariable Long id){
//		roomTypeService.delete(id);
//		return new ResponseEntity(HttpStatus.OK);
//		
//	}
	 @DeleteMapping("/deleteById/{id}")
	    public ResponseEntity<Void> deleteRoomType(@PathVariable long id) {
	        roomTypeService.delete(id);
	        return ResponseEntity.ok().build();
	    }
	  @PutMapping("/update")
	    public ResponseEntity<Void> updateStatus(@RequestBody RoomTypeBean roomType) {
	        roomTypeService.update(roomType);
	        return ResponseEntity.ok().build();
	    }
	  
	@PutMapping(path="/status")
	public ResponseEntity put(@RequestBody RoomType roomType)
	{
		roomTypeService.updateStatus(roomType);
		return new ResponseEntity<>(HttpStatus.OK);
	}

}
